!function(root,factory){"object"==typeof exports&&"object"==typeof module?module.exports=factory():"function"==typeof define&&define.amd?define([],factory):"object"==typeof exports?exports.mirrarray=factory():root.mirrarray=factory()}(this,(function(){return function(){"use strict";var __webpack_exports__={};function _typeof(obj){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&"function"==typeof Symbol&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj})(obj)}function MirrarrayError(){}MirrarrayError.prototype=Object.create(Error.prototype);var keysSeen;return __webpack_exports__.default=function(arr){if(keysSeen={},!Array.isArray(arr))throw new MirrarrayError("Input to mirrarray must be an array!");return arr.reduce((function(acc,key){if(isNull=null===(element=key),!["string","number","boolean","undefined"].includes(_typeof(element))&&!isNull)throw new MirrarrayError("Invalid element contained within input array; each element must be either a string or number!");var element,isNull;if(!function(element){var isNull=null===element,typeSeenBefore=keysSeen[""+element],thisType=isNull?"null":_typeof(element);return typeSeenBefore?typeSeenBefore===thisType:(keysSeen[""+element]=thisType,!0)}(key))throw new MirrarrayError("Distinct elements in the input array are coercing to the same string!");return acc[key]=key,acc}),{})},__webpack_exports__=__webpack_exports__.default}()}));